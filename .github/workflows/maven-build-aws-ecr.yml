# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI with Maven Build Tool

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file ./futuionsales/pom.xml

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and tag Docker image
      run: |
          docker build --file ./futuionsales/Dockerfile  -t tpavan997/testing:latest .
          docker tag tpavan997/testing:latest tpavan997/testing:1.0

    - name: Push Docker image to Docker Hub
      run: docker push tpavan997/testing:latest
      
    - name: Set Kubernetes context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.KUBE_CONFIG }}
    - name: configure kubectl
      run: |
        echo "$KUBE_CONFIG" > kubeconfig
        mkdir -p ~/.kube
        mv kubeconfig ~/.kube/config
        
    - name: Deploy to Kubernetes
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          k8s/deployment.yaml
          k8s/service.yaml





  
